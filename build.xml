<?xml version="1.0" encoding="US-ASCII"?>
<project name="headlong" default="all" basedir=".">

  <!-- Project Properties -->
  <property name="project.name" value="headlong" />
  <property name="project.version" value="13.3.0-SNAPSHOT" />

  <tstamp>
    <format property="TODAY" pattern="MMMM dd yyyy" />
  </tstamp>

  <!-- Directory Structure -->
  <property name="src.main.dir" value="${basedir}/src/main/java" />
  <property name="src.test.dir" value="${basedir}/src/test/java" />
  <property name="src.test.resources.dir" value="${basedir}/src/test/resources" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="build.main.dir" value="${build.dir}/classes/java/main" />
  <property name="build.test.dir" value="${build.dir}/classes/java/test" />
  <property name="build.lib.dir" value="${build.dir}/lib" />

  <!-- Compiler Settings -->
  <property name="java.source.version" value="1.8" /><!--release 8 -source 8 -target 8 -->
  <property name="java.target.version" value="1.8" />
  <property name="compiler.encoding" value="US-ASCII" />
  <property name="compiler.debug" value="true" />
  <property name="compiler.deprecation" value="false" />
  <property name="compiler.max.memory" value="700m" />

  <!-- Dependency Versions -->
  <property name="gson.version" value="2.13.1" />
  <property name="junit.jupiter.version" value="5.11.4" />
  <property name="junit.platform.version" value="1.11.4" />
  <property name="opentest4j.version" value="1.3.0" />
  <property name="bcprov.version" value="1.80" />

  <!-- Maven Repository Paths -->
  <property name="maven.repo" value="${user.home}/.m2/repository" />

  <!-- Library Paths -->
  <property name="gson.path" value=".m2/repository/com/google/code/gson/gson/${gson.version}/gson-${gson.version}.jar" />
  <property name="junit.api" value=".m2/repository/org/junit/jupiter/junit-jupiter-api/${junit.jupiter.version}/junit-jupiter-api-${junit.jupiter.version}.jar" />
  <property name="junit.engine" value=".m2/repository/org/junit/jupiter/junit-jupiter-engine/${junit.jupiter.version}/junit-jupiter-engine-${junit.jupiter.version}.jar" />
  <property name="junit.platform.commons" value=".m2/repository/org/junit/platform/junit-platform-commons/${junit.platform.version}/junit-platform-commons-${junit.platform.version}.jar" />
  <property name="junit.platform.engine" value=".m2/repository/org/junit/platform/junit-platform-engine/${junit.platform.version}/junit-platform-engine-${junit.platform.version}.jar" />
  <property name="junit.platform.launcher" value=".m2/repository/org/junit/platform/junit-platform-launcher/${junit.platform.version}/junit-platform-launcher-${junit.platform.version}.jar" />
  <property name="opentest4j" value=".m2/repository/org/opentest4j/opentest4j/${opentest4j.version}/opentest4j-${opentest4j.version}.jar" />
  <property name="bcprov" value=".m2/repository/org/bouncycastle/bcprov-jdk14/${bcprov.version}/bcprov-jdk14-${bcprov.version}.jar" />
  <property name="junit.console" value="${basedir}/lib/junit-platform-console-standalone-${junit.platform.version}.jar" />

  <!-- Classpaths -->
  <path id="compile.classpath">
    <pathelement location="${user.home}/${gson.path}" />
  </path>

  <path id="test.classpath">
    <pathelement location="${build.main.dir}" />
    <pathelement location="${user.home}/${gson.path}" />
    <pathelement location="${user.home}/${junit.api}" />
    <pathelement location="${user.home}/${junit.engine}" />
    <pathelement location="${user.home}/${junit.platform.commons}" />
    <pathelement location="${user.home}/${junit.platform.engine}" />
    <pathelement location="${user.home}/${junit.platform.launcher}" />
    <pathelement location="${user.home}/${opentest4j}" />
    <pathelement location="${user.home}/${bcprov}" />
  </path>

  <path id="test.runtime.classpath">
    <path refid="test.classpath" />
    <pathelement location="${build.test.dir}" />
    <pathelement location="${junit.console}" />
  </path>

  <!-- Pattern Sets -->
  <patternset id="compiler.resources">
    <exclude name="**/*.java" />
    <exclude name="**/*.class" />
  </patternset>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof" />
    <exclude name="**/*~" />
    <exclude name="**/.DS_Store" />
    <exclude name="**/.git/**" />
    <exclude name="**/.hg/**" />
    <exclude name="**/.svn/**" />
    <exclude name="**/CVS/**" />
    <exclude name="**/_svn/**" />
    <exclude name="**/vssver.scc/**" />
    <exclude name="**/vssver2.scc/**" />
  </patternset>

  <!-- Targets -->
  <target name="clean" description="Clean all build artifacts">
    <delete dir="${build.dir}" />
  </target>

  <target name="init" depends="clean" description="Initialize build directories">
    <mkdir dir="${build.main.dir}" />
    <mkdir dir="${build.test.dir}" />
    <mkdir dir="${build.lib.dir}" />
  </target>

  <target name="compile" depends="init" description="Compile main source code">
    <javac srcdir="${src.main.dir}"
           destdir="${build.main.dir}"
           includeantruntime="false"
           debug="${compiler.debug}"
           deprecation="${compiler.deprecation}"
           encoding="${compiler.encoding}"
           source="${java.source.version}"
           target="${java.target.version}"
           memorymaximumsize="${compiler.max.memory}"
           fork="true">
      <classpath refid="compile.classpath" />
    </javac>

    <copy todir="${build.main.dir}">
      <fileset dir="${src.main.dir}">
        <patternset refid="ignored.files" />
        <patternset refid="compiler.resources" />
      </fileset>
    </copy>
  </target>

  <target name="compile-tests" depends="compile" description="Compile test source code" unless="skip.tests">
    <javac srcdir="${src.test.dir}"
           destdir="${build.test.dir}"
           includeantruntime="false"
           debug="${compiler.debug}"
           deprecation="${compiler.deprecation}"
           encoding="${compiler.encoding}"
           source="${java.source.version}"
           target="${java.target.version}"
           memorymaximumsize="${compiler.max.memory}"
           fork="true">
      <classpath refid="test.classpath" />
    </javac>

    <copy todir="${build.test.dir}">
      <fileset dir="${src.test.resources.dir}" >
        <patternset refid="ignored.files" />
      </fileset>
    </copy>
  </target>

  <target name="test" depends="compile-tests" description="Run unit tests" unless="skip.tests">
    <java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
      <classpath refid="test.runtime.classpath" />
      <arg value="--scan-classpath" />
      <arg value="--disable-banner" />
    </java>
  </target>

  <target name="jar" depends="compile" description="Create JAR file">
    <jar destfile="${build.lib.dir}/headlong-${project.version}.jar" basedir="${build.main.dir}">
      <manifest>
        <attribute name="Implementation-Title" value="${project.name}" />
        <attribute name="Implementation-Version" value="${project.version}" />
        <attribute name="Automatic-Module-Name" value="com.esaulpaugh.headlong" />
        <attribute name="Build-Date" value="${TODAY}" />
      </manifest>
    </jar>
  </target>

  <target name="all" depends="compile, test, jar" description="Complete build with tests and JAR creation" />

</project>