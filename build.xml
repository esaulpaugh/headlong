<?xml version="1.0" encoding="US-ASCII"?>
<project name="headlong" default="all" basedir=".">

  <!-- Project Properties -->
  <property name="project.name" value="headlong" />
  <property name="project.version" value="13.3.0-SNAPSHOT" />

  <tstamp>
    <format property="TODAY" pattern="MMMM dd yyyy" />
  </tstamp>

  <!-- Directory Structure -->
  <property name="src.main.dir" value="${basedir}/src/main/java" />
  <property name="src.test.dir" value="${basedir}/src/test/java" />
  <property name="src.test.resources.dir" value="${basedir}/src/test/resources" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="build.main.dir" value="${build.dir}/classes/java/main" />
  <property name="build.test.dir" value="${build.dir}/classes/java/test" />
  <property name="build.lib.dir" value="${build.dir}/lib" />

  <!-- Compiler Settings -->
  <property name="java.source.version" value="1.8" /><!--release 8 -source 8 -target 8 -->
  <property name="java.target.version" value="1.8" />
  <property name="compiler.encoding" value="US-ASCII" />
  <property name="compiler.debug" value="true" />
  <property name="compiler.deprecation" value="false" />
  <property name="compiler.max.memory" value="700m" />

  <!-- Dependency Versions -->
  <property name="gson.version" value="2.13.1" />
  <property name="junit.jupiter.version" value="5.11.4" />
  <property name="junit.platform.version" value="1.11.4" />
  <property name="opentest4j.version" value="1.3.0" />
  <property name="bcprov.version" value="1.81" />

  <!-- Maven Repository Paths -->
  <property name="maven.repo" value="${user.home}/.m2/repository" />
  <property name="gradle.repo" value="${user.home}/.gradle/caches/modules-2/files-2.1" />
  <property name="gradle-cache" value="false" />

  <!-- Library Paths -->
  <!-- Gson -->
  <property name="maven.gson" value="${maven.repo}/com/google/code/gson/gson/${gson.version}/gson-${gson.version}.jar" />
  <property name="gradle.gson" value="${gradle.repo}/com.google.code.gson/gson/${gson.version}/853ce06c11316b33a8eae5e9095da096a9528b8f/gson-${gson.version}.jar" />

  <!-- JUnit -->
  <property name="maven.junit-api" value="${maven.repo}/org/junit/jupiter/junit-jupiter-api/${junit.jupiter.version}/junit-jupiter-api-${junit.jupiter.version}.jar" />
  <property name="gradle.junit-api" value="${gradle.repo}/org.junit.jupiter/junit-jupiter-api/${junit.jupiter.version}/308315b28e667db4091b2ba1f7aa220d1ddadb97/junit-jupiter-api-${junit.jupiter.version}.jar" />

  <property name="maven.junit-engine" value="${maven.repo}/org/junit/jupiter/junit-jupiter-engine/${junit.jupiter.version}/junit-jupiter-engine-${junit.jupiter.version}.jar" />
  <property name="gradle.junit-engine" value="${gradle.repo}/org.junit.jupiter/junit-jupiter-engine/${junit.jupiter.version}/dc10ec209623986a68ea07f67cdc7d2a65a60355/junit-jupiter-engine-${junit.jupiter.version}.jar" />

  <property name="maven.junit-platform-commons" value="${maven.repo}/org/junit/platform/junit-platform-commons/${junit.platform.version}/junit-platform-commons-${junit.platform.version}.jar" />
  <property name="gradle.junit-platform-commons" value="${gradle.repo}/org.junit.platform/junit-platform-commons/${junit.platform.version}/8898eea3ed0da2641548d602c3e308804f166303/junit-platform-commons-${junit.platform.version}.jar" />

  <property name="maven.junit-platform-engine" value="${maven.repo}/org/junit/platform/junit-platform-engine/${junit.platform.version}/junit-platform-engine-${junit.platform.version}.jar" />
  <property name="gradle.junit-platform-engine" value="${gradle.repo}/org.junit.platform/junit-platform-engine/${junit.platform.version}/21f61b123ad6ac8f7e73971bff3a096c8d8e1cd0/junit-platform-engine-${junit.platform.version}.jar" />

  <property name="maven.junit-platform-launcher" value="${maven.repo}/org/junit/platform/junit-platform-launcher/${junit.platform.version}/junit-platform-launcher-${junit.platform.version}.jar" />
  <property name="gradle.junit-platform-launcher" value="${gradle.repo}/org.junit.platform/junit-platform-launcher/${junit.platform.version}/3d83c201899d8c5e74e1a5d628eab900342a0e48/junit-platform-launcher-${junit.platform.version}.jar" />

  <!-- opentest4j -->
  <property name="maven.opentest4j" value="${maven.repo}/org/opentest4j/opentest4j/${opentest4j.version}/opentest4j-${opentest4j.version}.jar" />
  <property name="gradle.opentest4j" value="${gradle.repo}/org.opentest4j/opentest4j/${opentest4j.version}/152ea56b3a72f655d4fd677fc0ef2596c3dd5e6e/opentest4j-${opentest4j.version}.jar" />

  <!-- Bouncy Castle -->
  <property name="maven.bcprov" value="${maven.repo}/org/bouncycastle/bcprov-jdk14/${bcprov.version}/bcprov-jdk14-${bcprov.version}.jar" />
  <property name="gradle.bcprov" value="${gradle.repo}/org.bouncycastle/bcprov-jdk14/${bcprov.version}/be95a8430a622b71ff3cd879f8a64f964e51a188/bcprov-jdk14-${bcprov.version}.jar" />

  <!-- Conditionally use Gradle if -Dgradle-cache=true -->
  <condition property="gson" value="${gradle.gson}" else="${maven.gson}">
    <istrue value="${gradle-cache}" />
  </condition>

  <condition property="junit-api" value="${gradle.junit-api}" else="${maven.junit-api}">
    <istrue value="${gradle-cache}" />
  </condition>

  <condition property="junit-engine" value="${gradle.junit-engine}" else="${maven.junit-engine}">
    <istrue value="${gradle-cache}" />
  </condition>

  <condition property="junit-platform-commons" value="${gradle.junit-platform-commons}" else="${maven.junit-platform-commons}" >
    <istrue value="${gradle-cache}" />
  </condition>

  <condition property="junit-platform-engine" value="${gradle.junit-platform-engine}" else="${maven.junit-platform-engine}" >
    <istrue value="${gradle-cache}" />
  </condition>

  <condition property="junit-platform-launcher" value="${gradle.junit-platform-launcher}" else="${maven.junit-platform-launcher}" >
    <istrue value="${gradle-cache}" />
  </condition>

  <condition property="opentest4j" value="${gradle.opentest4j}" else="${maven.opentest4j}" >
    <istrue value="${gradle-cache}" />
  </condition>

  <condition property="bcprov" value="${gradle.bcprov}" else="${maven.bcprov}" >
    <istrue value="${gradle-cache}" />
  </condition>

  <property name="junit.console" value="${basedir}/lib/junit-platform-console-standalone-${junit.platform.version}.jar" />

  <!-- Classpaths -->
  <path id="compile.classpath">
    <pathelement location="${gson}" />
  </path>

  <path id="test.classpath">
    <pathelement location="${build.main.dir}" />
    <pathelement location="${gson}" />
    <pathelement location="${junit-api}" />
    <pathelement location="${junit-engine}" />
    <pathelement location="${junit-platform-commons}" />
    <pathelement location="${junit-platform-engine}" />
    <pathelement location="${junit-platform-launcher}" />
    <pathelement location="${opentest4j}" />
    <pathelement location="${bcprov}" />
  </path>

  <path id="test.runtime.classpath">
    <path refid="test.classpath" />
    <pathelement location="${build.test.dir}" />
    <pathelement location="${junit.console}" />
  </path>

  <!-- Pattern Sets -->
  <patternset id="compiler.resources">
    <exclude name="**/*.java" />
    <exclude name="**/*.class" />
  </patternset>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof" />
    <exclude name="**/*~" />
    <exclude name="**/.DS_Store" />
    <exclude name="**/.git/**" />
    <exclude name="**/.hg/**" />
    <exclude name="**/.svn/**" />
    <exclude name="**/CVS/**" />
    <exclude name="**/_svn/**" />
    <exclude name="**/vssver.scc/**" />
    <exclude name="**/vssver2.scc/**" />
  </patternset>

  <!-- Targets -->
  <target name="clean" description="Clean all build artifacts">
    <delete dir="${build.dir}" />
  </target>

  <target name="init" depends="clean" description="Initialize build directories">
    <mkdir dir="${build.main.dir}" />
    <mkdir dir="${build.test.dir}" />
    <mkdir dir="${build.lib.dir}" />
  </target>

  <target name="compile" depends="init" description="Compile main source code">
    <javac srcdir="${src.main.dir}"
           destdir="${build.main.dir}"
           includeantruntime="false"
           debug="${compiler.debug}"
           deprecation="${compiler.deprecation}"
           encoding="${compiler.encoding}"
           source="${java.source.version}"
           target="${java.target.version}"
           memorymaximumsize="${compiler.max.memory}"
           fork="true">
      <classpath refid="compile.classpath" />
    </javac>

    <copy todir="${build.main.dir}">
      <fileset dir="${src.main.dir}">
        <patternset refid="ignored.files" />
        <patternset refid="compiler.resources" />
      </fileset>
    </copy>
  </target>

  <target name="compile-tests" depends="compile" description="Compile test source code" unless="skip.tests">
    <javac srcdir="${src.test.dir}"
           destdir="${build.test.dir}"
           includeantruntime="false"
           debug="${compiler.debug}"
           deprecation="${compiler.deprecation}"
           encoding="${compiler.encoding}"
           source="${java.source.version}"
           target="${java.target.version}"
           memorymaximumsize="${compiler.max.memory}"
           fork="true">
      <classpath refid="test.classpath" />
    </javac>

    <copy todir="${build.test.dir}">
      <fileset dir="${src.test.resources.dir}" >
        <patternset refid="ignored.files" />
      </fileset>
    </copy>
  </target>

  <target name="test" depends="compile-tests" description="Run unit tests" unless="skip.tests">
    <java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
      <classpath refid="test.runtime.classpath" />
      <arg value="--scan-classpath" />
      <arg value="--disable-banner" />
    </java>
  </target>

  <target name="jar" depends="compile" description="Create JAR file">
    <jar destfile="${build.lib.dir}/headlong-${project.version}.jar" basedir="${build.main.dir}">
      <manifest>
        <attribute name="Implementation-Title" value="${project.name}" />
        <attribute name="Implementation-Version" value="${project.version}" />
        <attribute name="Automatic-Module-Name" value="com.esaulpaugh.headlong" />
        <attribute name="Build-Date" value="${TODAY}" />
      </manifest>
    </jar>
  </target>

  <target name="all" depends="compile, test, jar" description="Complete build with tests and JAR creation" />

</project>